# webhook.py

import datetime
import requests
from flask import Flask, request, jsonify

app = Flask(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
EXPECTED_TOKEN = '92a8247c0ce7472a86a5c36f71327d19'  # —Ç–æ–∫–µ–Ω –æ—Å—Ç–∞–≤–ª–µ–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –∫–∞–∫ —Ç—ã —É–∫–∞–∑–∞–ª
LOG_FILE = 'wazzup_log.txt'
CHANNEL_ID = 'fd738a59-6266-4aff-bdf4-bfa7420375ab'
ALLOWED_CHAT_ID = '77780504505'  # –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ñ–∏—Ä–º—ã
WAZZUP_SEND_API = 'https://api.wazzup24.com/v3/message'

# –ì–æ—Ä–æ–¥–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ —Ü–∏—Ñ—Ä–∞–º
CITIES = {
    '1': '–ú–æ—Å–∫–≤–∞',
    '2': '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
    '3': '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫',
    '4': '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥',
    '5': '–ö–∞–∑–∞–Ω—å'
}

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω—é
def get_menu_text():
    menu_lines = ['–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥, –æ—Ç–ø—Ä–∞–≤–∏–≤ —Ü–∏—Ñ—Ä—É:']
    for key, city in CITIES.items():
        menu_lines.append(f"{key}. {city}")
    return '\n'.join(menu_lines)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
last_messages = {}

@app.route('/', methods=['GET'])
def index():
    return 'Wazzup Webhook Listener is Running'

@app.route('/webhook', methods=['POST', 'GET'])
def webhook():
    if request.method == 'GET':
        return jsonify({"status": "ready"}), 200

    user_agent = request.headers.get('User-Agent', '').lower()
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤–µ–±—Ö—É–∫–∏ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (node-fetch) —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è
    if 'node-fetch' in user_agent:
        return jsonify({'status': 'ignored'}), 200

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    token = request.headers.get('Authorization', '').replace('Bearer ', '').strip()
    if token != EXPECTED_TOKEN:
        log(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω: {token}")
        return jsonify({'error': 'Unauthorized'}), 401

    try:
        data = request.get_json(force=True)
    except Exception as e:
        log(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ JSON: {e}")
        return jsonify({'error': 'bad json'}), 400

    log(f"‚úÖ –í–µ–±—Ö—É–∫ –ø—Ä–∏–Ω—è—Ç:\n{data}")

    try:
        messages = data.get("messages", [])
        for message in messages:
            chat_id = message.get("chatId") or message.get("chat_id")
            text = message.get("text", "").strip()

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –º–æ–π –Ω–æ–º–µ—Ä
            if chat_id != ALLOWED_CHAT_ID:
                continue
            if not text:
                continue

            # –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —Ç–µ–∫—Å—Ç–∞
            if last_messages.get(chat_id) == text:
                continue
            last_messages[chat_id] = text

            log(f"üì® –ü—Ä–∏–Ω—è—Ç–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}: {text}")

            # –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–∞
            if text in CITIES:
                send_message(chat_id, CITIES[text])
            else:
                # –ù–µ —Ü–∏—Ñ—Ä–∞ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–∞—è —Ü–∏—Ñ—Ä–∞
                send_message(chat_id, "–ù–µ –ø–æ–Ω—è–ª –≤–∞—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n" + get_menu_text())

    except Exception as e:
        log(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")

    return jsonify({'status': 'ok'}), 200


def send_message(chat_id: str, text: str) -> bool:
    headers = {
        'Authorization': f'Bearer {EXPECTED_TOKEN}',
        'Content-Type': 'application/json'
    }
    payload = {
        "channelId": CHANNEL_ID,
        "chatType": "whatsapp",
        "chatId": chat_id,
        "text": text
    }

    try:
        response = requests.post(WAZZUP_SEND_API, json=payload, headers=headers, timeout=30)
        print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
        if response.status_code in [200, 201]:
            log(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ [{chat_id}]: {text}")
            return True
        else:
            log(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code} {response.text}")
            return False
    except Exception as e:
        log(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        return False


def log(message: str):
    now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    with open(LOG_FILE, 'a', encoding='utf-8') as f:
        f.write(f"{now} ‚Äî {message}\n")


if __name__ == '__main__':
    # –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –º–µ–Ω—é –≤ –ª–æ–≥
    log(get_menu_text())
    app.run(host='0.0.0.0', port=10000)
