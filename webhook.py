import datetime
import requests
from flask import Flask, request, jsonify

app = Flask(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
EXPECTED_TOKEN = '92a8247c0ce7472a86a5c36f71327d19'
LOG_FILE = 'wazzup_log.txt'
CHANNEL_ID = 'fd738a59-6266-4aff-bdf4-bfa7420375ab'
ALLOWED_CHAT_ID = '77766961328'  # –¢–æ–ª—å–∫–æ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

# –ö–∞—Ä—Ç–∞ –≥–æ—Ä–æ–¥–æ–≤
CITY_MAP = {
    "1": "–ê–ª–º–∞—Ç—ã",
    "2": "–ê—Å—Ç–∞–Ω–∞",
    "3": "–®—ã–º–∫–µ–Ω—Ç",
    "4": "–ö–∞—Ä–∞–≥–∞–Ω–¥–∞",
    "5": "–ü–∞–≤–ª–æ–¥–∞—Ä",
    "6": "–ê–∫—Ç–æ–±–µ"
}

WAZZUP_SEND_API = 'https://api.wazzup24.com/v2/messages/send'


@app.route('/', methods=['GET'])
def index():
    return 'Wazzup Webhook Listener is Running'


@app.route('/webhook', methods=['POST', 'GET'])
def webhook():
    if request.method == 'GET':
        return jsonify({"status": "ready"}), 200

    user_agent = request.headers.get('User-Agent', '').lower()

    if 'node-fetch' not in user_agent:
        token = request.headers.get('Authorization', '').replace('Bearer ', '').strip()
        if token != EXPECTED_TOKEN:
            log(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω: {token}")
            return jsonify({'error': 'Unauthorized'}), 401

    try:
        data = request.get_json(force=True)
    except Exception as e:
        log(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON: {e}")
        data = {}

    log(f"‚úÖ –í–µ–±—Ö—É–∫ –ø—Ä–∏–Ω—è—Ç:\n{data}")

    try:
        messages = data.get("messages", [])
        for message in messages:
            chat_id = message.get("chatId") or message.get("chat_id")
            text = message.get("text", "").strip()

            if chat_id != ALLOWED_CHAT_ID:
                log(f"üö´ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}")
                continue

            log(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}: {text}")

            # –û—Ç–≤–µ—Ç —Å –≤—ã–±–æ—Ä–æ–º –≥–æ—Ä–æ–¥–∞
            if text.lower() in ["start", "–≥–æ—Ä–æ–¥", "–≥–æ—Ä–æ–¥–∞"]:
                city_list = "\n".join([f"{k} ‚Äî {v}" for k, v in CITY_MAP.items()])
                send_message(chat_id, f"–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥, –æ—Ç–ø—Ä–∞–≤–∏–≤ –µ–≥–æ –Ω–æ–º–µ—Ä:\n{city_list}")
            elif text in CITY_MAP:
                send_message(chat_id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥: {CITY_MAP[text]}")
            else:
                send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ '–≥–æ—Ä–æ–¥' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤—ã–±–æ—Ä.")

    except Exception as e:
        log(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")

    return jsonify({'status': 'ok'}), 200


def send_message(phone: str, text: str) -> bool:
    if phone.startswith('+'):
        phone = phone[1:]

    url = WAZZUP_SEND_API
    headers = {
        'Authorization': f'Bearer {EXPECTED_TOKEN}',
        'Content-Type': 'application/json'
    }
    payload = {
        "phone": phone,
        "channelId": CHANNEL_ID,
        "text": text
    }
    try:
        response = requests.post(url, json=payload, headers=headers, timeout=30)
        print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
        if response.status_code == 200:
            log(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {phone}: {text}")
            return True
        else:
            log(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {response.status_code} {response.text}")
            return False
    except Exception as e:
        log(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False


def log(message: str):
    now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    with open(LOG_FILE, 'a', encoding='utf-8') as f:
        f.write(f"{now} ‚Äî {message}\n")


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000)
